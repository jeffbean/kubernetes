---
- name: Assures kubernetes server dir exists
  file: path={{ kube_server_dir }} state=directory

- name: Create system kube-cert groups
  group: name={{ kube_cert_group }} state=present system=yes

- name: Get create cert script from Kubernetes
  get_url: url=https://raw.githubusercontent.com/GoogleCloudPlatform/kubernetes/master/cluster/saltbase/salt/generate-cert/make-cert.sh
    dest="{{ kube_server_dir }}/make-cert.sh" mode=0755
  notify:
    - remove certs
    - create certs
    - restart apiserver

- name: Get create ca cert script from Kubernetes
  get_url: url=https://raw.githubusercontent.com/GoogleCloudPlatform/kubernetes/master/cluster/saltbase/salt/generate-cert/make-ca-cert.sh
    dest="{{ kube_server_dir }}/make-ca-cert.sh" mode=0755 

- name: Change kubernetes {{ kube_server_dir }} directory owner to 'kube' user
  file: path={{ kube_server_dir }} owner=kube state=directory recurse=yes
  
- name: write the config file for the api server
  template: src=apiserver.j2 dest=/etc/kubernetes/apiserver
  notify:
    - restart apiserver

- name: write the config file for the controller-manager
  copy: src=controller-manager dest=/etc/kubernetes/controller-manager
  notify:
    - restart controller-manager

- name: write the config file for the scheduler
  copy: src=scheduler dest=/etc/kubernetes/scheduler
  notify:
    - restart scheduler

- name: Enable apiserver
  service: name=kube-apiserver enabled=yes state=started

- name: Enable controller-manager
  service: name=kube-controller-manager enabled=yes state=started

- name: Enable scheduler
  service: name=kube-scheduler enabled=yes state=started

- include: firewalld.yml
  when: has_firewalld

- include: iptables.yml
  when: not has_firewalld and has_iptables
